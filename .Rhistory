data_long <- pivot_longer(data_numeriques, cols = everything(), names_to = "Variable", values_to = "Valeur")
ggplot(data_long, aes(x = Variable, y = Valeur, fill = Variable)) +
geom_boxplot() +
labs(title = "Boxplots de toutes les variables numériques", x = "", y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
data = data %>% mutate_if(is.character,as.factor)
str(data)
freq_table <- data.frame(
row.names = NULL,
Modalités = levels(factor(data$Sexe)),
Effectifs = as.vector(table(data$Sexe)),
`Fréquences(%)` = round(as.vector(prop.table(table(data$Sexe)) * 100), 2)
)
freq_table
library(ggplot2)
library(gridExtra)
bar_plot <- ggplot(freq_table, aes(x = Modalités, y = Effectifs, fill = Modalités)) +
geom_col(width = 0.6, color = "black", show.legend = FALSE) +
geom_text(aes(label = Effectifs), vjust = -0.5, size = 4) +
scale_fill_manual(values = c("Female" = "#ff69b4", "Male" = "#1f77b4")) +
labs(title = "Répartition par sexe (Barres)",
x = NULL,
y = "Effectifs") +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
axis.text.x = element_text(angle = 45, hjust = 1, size = 11),
panel.grid.major.x = element_blank()
)
pie_plot <- ggplot(freq_table, aes(x = "", y = Effectifs, fill = Modalités)) +
geom_col(width = 1, color = "black") +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(round(Effectifs/sum(Effectifs)*100, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white", size = 4.5) +
scale_fill_manual(values = c("Female" = "#ff69b4", "Male" = "#1f77b4")) +
labs(title = "Répartition par sexe (Secteurs)",
fill = "Sexe") +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
legend.position = "right",
legend.title = element_text(face = "bold", size = 11),
legend.text = element_text(size = 10)
)
grid.arrange(
bar_plot,
pie_plot,
ncol = 2,
widths = c(1, 1.3))
freq_table1 <- data.frame(
row.names = NULL,
Modalites1 = levels(factor(data$niveau_educ_parent)),
Effectifs1 = as.vector(table(data$niveau_educ_parent)),
`Fréquences(%)1` = round(as.vector(prop.table(table(data$niveau_educ_parent)) * 100), 2)
)
freq_table1
library(ggplot2)
library(gridExtra)
custom_colors1 <- c(
"Bachelors" = "#cc0000",
"High School" = "#000099",
"Masters" = "#cc6600",
"PhD" = "#006600"
)
bar_plot1 <- ggplot(freq_table1, aes(x = reorder(Modalites1, -Effectifs1), y = Effectifs1, fill = Modalites1)) +
geom_bar(stat = "identity", color = "black", width = 0.6, show.legend = FALSE) +
geom_text(aes(label = Effectifs1), vjust = -0.5, size = 3.5) +
scale_fill_manual(values = custom_colors1) +
labs(
title = "Niveau d'éducation des parents (Barres)",
x = NULL,
y = "Effectifs"
) +
theme_minimal(base_size = 11) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 10),
panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 20, hjust = 1)
)
pie_plot1 <- ggplot(freq_table1, aes(x = "", y = Effectifs1, fill = Modalites1)) +
geom_bar(stat = "identity", width = 1, color = "black") +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(round(Effectifs1/sum(Effectifs1)*100, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white", size = 4) +  # Taille réduite
scale_fill_manual(values = custom_colors1) +
labs(
title = "Niveau d'éducation (Secteurs)",
fill = "Niveau d'éducation"
) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
legend.title = element_text(face = "bold", size = 10),
legend.text = element_text(size = 9)
)
grid.arrange(
bar_plot1,
pie_plot1,
ncol = 2,
widths = c(1, 1.3)
)
freq_table2 <- data.frame(
row.names = NULL,
Modalites2 = levels(factor(data$acces_internet_maison)),
Effectifs2 = as.vector(table(data$acces_internet_maison)),
`Fréquences(%)2` = round(as.vector(prop.table(table(data$acces_internet_maison)) * 100), 2)
)
freq_table2
library(ggplot2)
library(gridExtra)
custom_colors2 <- c("Oui" = "#cc6600", "Non" = "#006600")
bar_plot2 <- ggplot(freq_table2, aes(x = Modalites2, y = Effectifs2, fill = Modalites2)) +
geom_col(color = "black", width = 0.6, show.legend = FALSE) +
geom_text(aes(label = Effectifs2), vjust = -0.5, size = 3.5) +  # Ajout des valeurs
scale_fill_manual(values = custom_colors2) +
labs(title = "Accès Internet (Barres)",
x = NULL,
y = "Effectifs") +
theme_minimal(base_size = 11) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
axis.title.y = element_text(size = 10),
panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
pie_plot2 <- ggplot(freq_table2, aes(x = "", y = Effectifs2, fill = Modalites2)) +
geom_col(color = "black", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(round(Effectifs2/sum(Effectifs2)*100, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white", size = 4) +
scale_fill_manual(values = custom_colors2) +
labs(title = "Accès Internet (Secteurs)",
fill = "Acces_internet_maison") +
theme_void() +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
legend.position = "right")
grid.arrange(
bar_plot2,
pie_plot2,
ncol = 2,
widths = c(1, 1.2))
freq_table3 <- data.frame(
row.names = NULL,
Modalites3 = levels(factor(data$activite_parascolaire)),
Effectifs3 = as.vector(table(data$activite_parascolaire)),
`Fréquences(%)3` = round(as.vector(prop.table(table(data$activite_parascolaire)) * 100), 2)
)
freq_table3
library(ggplot2)
library(gridExtra)
custom_colors3 <- c("Oui" = "#006600", "Non" = "darkred")
bar_plot3 <- ggplot(freq_table3, aes(x = Modalites3, y = Effectifs3, fill = Modalites3)) +
geom_col(color = "black", width = 0.6, show.legend = FALSE) +
geom_text(aes(label = Effectifs3), vjust = -0.5, size = 3.5) +  # Ajout des valeurs
scale_fill_manual(values = custom_colors3) +
labs(title = "Activites parascolaires (Barres)",
x = NULL,
y = "Effectifs") +
theme_minimal(base_size = 11) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
axis.title.y = element_text(size = 10),
panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
pie_plot3 <- ggplot(freq_table3, aes(x = "", y = Effectifs3, fill = Modalites3)) +
geom_col(color = "black", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(round(Effectifs3/sum(Effectifs3)*100, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white", size = 4) +
scale_fill_manual(values = custom_colors3) +
labs(title = "Activites parascolaires (Secteurs)",
fill = "activite_parascolaire") +
theme_void() +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
legend.position = "right")
grid.arrange(
bar_plot3,
pie_plot3,
ncol = 2,
widths = c(1, 1.2))
freq_table4 <- data.frame(
row.names = NULL,
Modalites4 = levels(factor(data$Reussite_echec)),
Effectifs4 = as.vector(table(data$Reussite_echec)),
`Fréquences(%)4` = round(as.vector(prop.table(table(data$Reussite_echec)) * 100), 2))
freq_table4
library(ggplot2)
library(gridExtra)
custom_colors4 <- c("Reussite" = "#006600", "Echec" = "darkred")
bar_plot4 <- ggplot(freq_table4, aes(x = Modalites4, y = Effectifs4, fill = Modalites4)) +
geom_col(color = "black", width = 0.6, show.legend = FALSE) +
geom_text(aes(label = Effectifs4), vjust = -0.5, size = 3.5) +  # Ajout des valeurs
scale_fill_manual(values = custom_colors4) +
labs(title = "Reussite_echec (Barres)",
x = NULL,
y = "Effectifs") +
theme_minimal(base_size = 11) +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
axis.title.y = element_text(size = 10),
panel.grid.major.x = element_blank(),
axis.text.x = element_text(angle = 45, hjust = 1))
pie_plot4 <- ggplot(freq_table4, aes(x = "", y = Effectifs4, fill = Modalites4)) +
geom_col(color = "black", width = 1) +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(round(Effectifs4/sum(Effectifs4)*100, 1), "%")),
position = position_stack(vjust = 0.5),
color = "white", size = 4) +
scale_fill_manual(values = custom_colors4) +
labs(title = "Reussite_echec (Secteurs)",
fill = "Reussite_echec") +
theme_void() +
theme(plot.title = element_text(size = 12, hjust = 0.5, face = "bold"),
legend.position = "right")
grid.arrange(
bar_plot4,
pie_plot4,
ncol = 2,
widths = c(1, 1.2))
library(akposso)
akposso.qt.tableau(data$Heures_etudes_semaine)
library(ggplot2)
ggplot(data, aes(x = Heures_etudes_semaine)) +
geom_histogram(stat = "bin", colour = "black", fill = "gray") +
geom_text(stat = 'count', aes(label = after_stat(count)),
vjust = -0.5, size = 3) +
scale_x_continuous(breaks = data$Heures_etudes_semaine) +
labs(title = "Histogramme des Heures d'étude par semaine",
x = "Heures d'étude par semaine",
y = "") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
akposso.qt.resume(data$Heures_etudes_semaine)
head(akposso.qt.tableau(data$Taux_de_frequentation))
tail(akposso.qt.tableau(data$Taux_de_frequentation))
library(ggplot2)
ggplot(data,aes(x=Taux_de_frequentation))+
geom_histogram(stat = "bin",colour = "black",fill="gray")+
labs(title = "Histogramme Taux_de_frequentation",
x = "Taux_de_frequentation",
y = "Valeurs") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45,hjust = 1))
akposso.qt.resume(data$Taux_de_frequentation)
akposso.qt.tableau(data$Score_exam_passé)
library(ggplot2)
ggplot(data,aes(x=Score_exam_passé))+
geom_histogram(stat = "bin",colour = "black",fill="gray")+
labs(title = "Histogramme Score_exam_passé",
x = "Score_exam_passé",
y = "Valeurs") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45,hjust = 1))
akposso.qt.resume(data$Score_exam_passé)
akposso.qt.tableau(data$score_exam_final)
library(ggplot2)
ggplot(data,aes(x = score_exam_final))+
geom_histogram(stat = "bin",colour = "black",fill="gray") +
labs(title = "Histogramme score_exam_final",
x = "score_exam_final",
y = "Valeurs") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45,hjust = 1))
akposso.qt.resume(data$score_exam_final)
echec = 355
cat("Le nombre d'élève ayant échoué est:",echec)
reussite = 145
cat("Le nombre d'élève ayant reussi est:",reussite)
tableau = table(data$Reussite_echec)
round(prop.table(tableau),2)
round(binom.test(echec,500)$conf.int,2)
round(binom.test(reussite,500)$conf.int,2)
sexe = factor(data$Sexe,labels = c("Fille","Garcon"))
homme = table(sexe,data$Reussite_echec)
homme
echoue_h = 178
cat("Le nombre d'élève garçon ayant echoué est:",echoue_h)
reussi_h = 66
cat("Le nombre d'élève garçon ayant reussi est:",reussi_h)
echoue_f = 176
cat("Le nombre d'élève fille ayant echoué est:",echoue_f)
reussi_f = 80
cat("Le nombre d'élève fille ayant reussi est:",reussi_f)
taux_he = (echoue_h/500)*100
cat("Sur cet échantillon de 500 individus,le taux de d'échec des garçons est:", taux_he,"%")
taux_hr = (reussi_h/500)*100
cat("Sur cet échantillon de 500 individus,le taux de reussite des garçons est:", taux_hr,"%")
taux_fe = (echoue_f/500)*100
cat("Sur cet échantillon de 500 individus,le taux de d'échec des filles est:", taux_fe,"%")
taux_fr = (reussi_f/500)*100
cat("Sur cet échantillon de 500 individus,le taux de reussite des filles est:", taux_fr,"%")
round(binom.test(echoue_h,500)$conf.int,2)
round(binom.test(reussi_h,500)$conf.int,2)
round(binom.test(echoue_f,500)$conf.int,2)
round(binom.test(reussi_f,500)$conf.int,2)
library(dplyr)
library(ggplot2)
tab <- data %>%
count(Reussite_echec, Sexe)
ggplot(tab, aes(x = Reussite_echec, y = n, fill = Sexe)) +
geom_bar(stat = "identity", position = "stack", color = "black") +
geom_text(
aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 4
) +
scale_fill_manual(
values = c("Female" = "#ff69b4", "Male" = "#1f77b4"),  # Couleurs personnalisées
name = "Sexe"  # Titre de la légende
) +
labs(
title = "Réussite/Échec par sexe",
x = "Statut de réussite",
y = "Effectif",
fill = "Sexe"
) +
theme_minimal()
sexe = factor(data$Sexe,labels = c("Femme","Homme"))
tab = table(sexe,data$Reussite_echec)
expected = chisq.test(tab)$expected
tab
expected
cat("Pourcentage de cases avec effectif théorique ≥ 5 :",mean(expected >= 5) * 100, "%\n")
chisq.test(tab)
library(ggplot2)
ggplot(data,aes(x = Reussite_echec, y= Heures_etudes_semaine))+
geom_boxplot(color="black",fill=c("darkred","blue"))+
labs(title = "Comparaisons des sous-populations",
x = "Reussite_echec",
y = "Heures_etudes_semaine")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45,hjust = 1))
library(RVAideMemoire)
byf.shapiro(data$Heures_etudes_semaine~data$Reussite_echec)
kruskal.test(data$Heures_etudes_semaine~data$Reussite_echec)
library(ggplot2)
ggplot(data,aes(x = Reussite_echec, y=Taux_de_frequentation ))+
geom_boxplot(color="black",fill=c("darkred","blue"))+
labs(title = "Comparaisons des sous-populations",
x = "Reussite_echec",
y = "Taux_de_frequentation")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45,hjust = 1))
library(RVAideMemoire)
byf.shapiro(data$Taux_de_frequentation~data$Reussite_echec)
kruskal.test(data$Taux_de_frequentation~data$Reussite_echec)
library(ggplot2)
ggplot(data,aes(x = Reussite_echec, y=Score_exam_passé))+
geom_boxplot(color="black",fill=c("darkred","blue"))+
labs(title = "Comparaisons des sous-populations",
x = "Reussite_echec",
y = "Score_exam_passé")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45,hjust = 1))
library(RVAideMemoire)
byf.shapiro(data$Score_exam_passé~data$Reussite_echec)
kruskal.test(data$Score_exam_passé~data$Reussite_echec)
library(dplyr)
library(ggplot2)
tab <- data %>%
count(Reussite_echec, niveau_educ_parent)
ggplot(tab,
aes(x = Reussite_echec,
y = n,
fill = niveau_educ_parent)) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
width = 0.7) +
geom_text(aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 4,
fontface = "bold") +
scale_fill_manual(
values = c("Bachelors" = "#cc0000",
"High School" = "#000099",
"Masters" = "#cc6600",
"PhD" = "#006600"),
name = "") +
labs(title = "Réussite/Échec par niveau éducatif parental",
x = "Statut de réussite",
y = "Effectif") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "bottom",
axis.text.x = element_text(angle = 45,hjust = 1))
educ = factor(data$niveau_educ_parent,labels = c("Bachelors","High School","Masters","PhD"))
tab1 = table(educ,data$Reussite_echec)
expected1 = chisq.test(tab1)$expected
tab1
expected1
cat("Pourcentage de cases avec effectif théorique ≥ 5 :",mean(expected1 >= 5) * 100, "%\n")
chisq.test(tab1)
library(dplyr)
library(ggplot2)
tab <- data %>%
count(Reussite_echec,acces_internet_maison)
ggplot(tab,
aes(x = Reussite_echec,
y = n,
fill = acces_internet_maison )) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
width = 0.7) +
geom_text(aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 4,
fontface = "bold") +
scale_fill_manual(
values = c("Non" = "#cc0000",
"Oui" = "#006600"),
name = "") +
labs(title = "Réussite/Échec par acces à internet domicile",
x = "Statut de réussite",
y = "Effectif") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "bottom",
axis.text.x = element_text(angle = 45,hjust = 1))
acces = factor(data$acces_internet_maison,labels = c("Non","Oui"))
tab2 = table(acces,data$Reussite_echec)
expected2 = chisq.test(tab2)$expected
tab2
expected2
cat("Pourcentage de cases avec effectif théorique ≥ 5 :",mean(expected2 >= 5) * 100, "%\n")
chisq.test(tab2)
library(dplyr)
library(ggplot2)
tab <- data %>%
count(Reussite_echec,activite_parascolaire)
ggplot(tab,
aes(x = Reussite_echec,
y = n,
fill = activite_parascolaire )) +
geom_bar(stat = "identity",
position = "stack",
color = "black",
width = 0.7) +
geom_text(aes(label = n),
position = position_stack(vjust = 0.5),
color = "white",
size = 4,
fontface = "bold") +
scale_fill_manual(
values = c("Non" = "darkred",
"Oui" = "#006600"),
name = "") +
labs(title = "Réussite/Échec par activite_parascolaire",
x = "Statut de réussite",
y = "Effectif") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5, face = "bold"),
legend.position = "bottom",
axis.text.x = element_text(angle = 45,hjust = 1))
act = factor(data$activite_parascolaire,labels = c("Non","Oui"))
tab3 = table(act,data$Reussite_echec)
expected3 = chisq.test(tab3)$expected
tab3
expected3
cat("Pourcentage de cases avec effectif théorique ≥ 5 :",mean(expected3 >= 5) * 100, "%\n")
chisq.test(tab3)
model = glm(formula = Reussite_echec ~ Sexe + Heures_etudes_semaine +
Taux_de_frequentation + Score_exam_passé + niveau_educ_parent +
acces_internet_maison + activite_parascolaire, family = binomial,
data = data)
print(anova(model),test="chisq")
model1 = glm(Reussite_echec ~ Heures_etudes_semaine +Taux_de_frequentation +    Score_exam_passé+acces_internet_maison+activite_parascolaire,data = data,family=binomial)
summary(model1)
ODD_RATIO = exp(model1$coefficients)
ODD_RATIO
library(mfx)
logitmfx(Reussite_echec~Heures_etudes_semaine +Taux_de_frequentation +    Score_exam_passé+acces_internet_maison+activite_parascolaire,data=data)
data$prediction = predict(model1,data,type="response")
data
data$Resultat <- ifelse(data$prediction >= 0.60, "Reussite", "Echec")
data
r = table(data$Reussite_echec,data$Resultat)
r
(60+22)/(332+22+60+86)
TMC = (60+22)/(332+22+60+86)
TMC
TMC = ((60+22)/(332+22+60+86))*100
TMC
TMC = ((60+22)/(332+22+60+86))*100
TMC,"%/"
TMC = ((60+22)/(332+22+60+86))*100
cat(TMC,"%/")
TMC = ((60+22)/(332+22+60+86))*100
cat(TMC,"%")
akposso.qt.resume(data$Taux_de_frequentation)
library(akposso)
akposso.qt.resume(data$Taux_de_frequentation)
library(dplyr)
don = data %>% select_if(is.numeric)
data
don
corr(don)
cor(don)
cor(don)
summary(stephencurry$REBONDS)
rm=list(ls())
reticulate::repl_python()
reticulate::repl_python()
